// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  bookings Booking[]
  reviews  Review[]

  @@map("users")
}

model Room {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  capacity    Int
  size        String?
  bedType     String
  view        String?
  bathroom    String?
  features    String[] // Array of feature keys
  amenities   Json     // Store amenities as JSON
  totalRooms  Int      @default(1)
  available   Boolean  @default(true)
  image       String?
  rating      Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  bookings Booking[]
  reviews  Review[]

  @@map("rooms")
}

model Booking {
  id            String        @id @default(cuid())
  bookingNumber String        @unique // AST-2024-001 format
  roomId        String
  userId        String?
  guestInfo     Json          // Store guest information as JSON
  checkIn       DateTime
  checkOut      DateTime
  adults        Int
  children      Int
  totalAmount   Float
  paymentMethod PaymentMethod
  paymentStatus PaymentStatus @default(PENDING)
  bookingStatus BookingStatus @default(CONFIRMED)
  specialRequests String?
  stripePaymentIntentId String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  room   Room   @relation(fields: [roomId], references: [id])
  user   User?  @relation(fields: [userId], references: [id])

  @@map("bookings")
}

model Offer {
  id          String   @id @default(cuid())
  title       String
  description String
  image       String?
  discount    Float    // Percentage discount
  startDate   DateTime
  endDate     DateTime
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("offers")
}

model Review {
  id        String   @id @default(cuid())
  roomId    String
  userId    String
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("reviews")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  status    ContactStatus @default(UNREAD)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Settings {
  id    String @id @default(cuid())
  key   String @unique
  value String
  type  String @default("string") // string, number, boolean, json

  @@map("settings")
}

enum UserRole {
  ADMIN
  USER
}

enum PaymentMethod {
  CARD
  CASH
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum BookingStatus {
  CONFIRMED
  PENDING
  CANCELLED
  CHECKED_IN
  CHECKED_OUT
}

enum ContactStatus {
  UNREAD
  READ
  REPLIED
  CLOSED
} 